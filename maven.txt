Maven follows a well-defined build life cycle when it builds, tests, and distributes an artifact. The life cycle constitutes a series of stages or steps that get executed in the same order, independent of the artifact being produced. Maven refers to the steps in a life cycle as phases. Maven has the following three built-in life cycles:

Default: This life cycle handles the compiling, packaging, and deployment of a Maven project.
Clean: This life cycle handles the deletion of temporary files and generated artifacts from the target directory.
Site: This life cycle handles the generation of documentation and site generation.

To better understand the build life cycle and its phases, let¡¯s look at the some of the phases associated with the default life cycle:

Validate: Runs checks to ensure that the project is correct and that all dependencies are downloaded and available.
Compile: Compiles the source code.
Test: Runs unit tests using frameworks. This step doesn¡¯t require that the application be packaged.
Package: Assembles compiled code into a distributable format, such as JAR or WAR.
Install: Installs the packaged archive into a local repository. The archive is now available for use by any project running on that machine.
Deploy: Pushes the built archive into a remote repository for use by other teams and team members.
